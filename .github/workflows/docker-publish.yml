# Github workflow runner for Docker Multi-Arch using QEMU, Buildx for amd64 & arm64
name: Docker Multi-Arch

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

# References:
# https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions
# https://docs.github.com/en/actions/using-workflows/manually-running-a-workflow
# https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#onworkflow_dispatch
# https://github.com/docker/metadata-action#semver
# https://blog.devgenius.io/how-to-build-your-docker-images-using-multi-arch-to-support-arm64-m1-macbook-6ebc42a47cd7
# https://docs.github.com/en/actions/security-guides/using-secrets-in-github-actions
# https://docs.docker.com/security/for-developers/access-tokens/
# https://github.com/pabloromeo/docker-dogecoin/blob/master/Dockerfile
on:
  push:
    #branches: 
    #  - "main"
    # Publish semver tags as releases.
    tags: 
      - 'v*.*.*'
  #pull_request:
  #  branches:
  #    - "main"

  #workflow_dispatch:
  #  branches: 
  #  - "main"

env:
  # Use docker.io for Docker Hub if empty
  #REGISTRY: ghcr.io
  # github.repository as <account>/<repo>
  IMAGE_NAME: ${{ github.repository }}


jobs:
  build:

    runs-on: ubuntu-latest
    name: build for amd64/arm64
    permissions:
      contents: read
      packages: write
      # This is used to complete the identity challenge
      # with sigstore/fulcio when running outside of PRs.
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      # Install the cosign tool except on PR
      # https://github.com/sigstore/cosign-installer
      - name: Install cosign
        if: github.event_name != 'pull_request'
        uses: sigstore/cosign-installer@6e04d228eb30da1757ee4e1dd75a0ec73a653e06 #v3.1.1
        with:
          cosign-release: 'v2.1.1'

      # Setup hardware emulator using QEMU
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3.0.0

      # Set up BuildKit Docker container builder to be able to build
      # multi-platform images and export cache
      # https://github.com/docker/setup-buildx-action
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.0.0

      # Login against a Docker registry except on PR
      # https://github.com/docker/login-action
      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3.0.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # Extract metadata (labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata
        id: metadata
        uses: docker/metadata-action@v5.0.0
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          flavor: |
            latest=auto
          # Docker tags based on the following events/attributes
#          tags: |
#            type=match,pattern=\d.\d.\d,enable=true
#            type=semver,pattern={{version}},value=,enable=true,priority=900
#            type=semver,pattern={{major}}.{{minor}},value=,enable=true,priority=900
#            type=semver,pattern={{major}},value=,enable=true,priority=900
#            type=ref,event=tag,enable=true,priority=600
#            type=ref,event=branch,enable=false,priority=600
#            type=sha,prefix=sha-,format=short,enable=false,priority=100

      # Extract git reference (tags) for Docker
      # https://github.com/orgs/community/discussions/26686#discussioncomment-3252857
      # https://github.blog/changelog/2022-10-11-github-actions-deprecating-save-state-and-set-output-commands/
      # https://docs.github.com/en/actions/using-workflows/workflow-commands-for-github-actions#example-masking-a-generated-output-within-a-single-job
      - name: Extract Docker tag
        id: tag
        run: |
          echo "SOURCE_NAME=${GITHUB_REF#refs/*/}" >> $GITHUB_OUTPUT
          echo "SOURCE_BRANCH=${GITHUB_REF#refs/heads/}" >> $GITHUB_OUTPUT
          echo "SOURCE_TAG=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
          echo "TAG_VERSION=$(echo ${GITHUB_REF#refs/tags/} | cut -d'v' -f2)" >> $GITHUB_OUTPUT
          echo "TAG_MINOR=$(echo ${GITHUB_REF#refs/tags/} | cut -d'v' -f2 | cut -d'.' -f1,2)" >> $GITHUB_OUTPUT
          echo "TAG_MAJOR=$(echo ${GITHUB_REF#refs/tags/} | cut -d'v' -f2 | cut -d'.' -f1)" >> $GITHUB_OUTPUT
          echo "TAG_LATEST=latest" >> $GITHUB_OUTPUT

      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@v5.0.0
        with:
          context: .
          file: Dockerfile
          platforms: linux/amd64,linux/arm64,linux/arm/v7,linux/arm/v6
          push: ${{ github.event_name != 'pull_request' }}
          tags: |
            "${{ env.IMAGE_NAME }}:${{ steps.tag.outputs.TAG_VERSION }}"
            "${{ env.IMAGE_NAME }}:${{ steps.tag.outputs.TAG_MINOR }}"
            "${{ env.IMAGE_NAME }}:${{ steps.tag.outputs.TAG_MAJOR }}"
            "${{ env.IMAGE_NAME }}:${{ steps.tag.outputs.TAG_LATEST }}"
          labels: ${{ steps.metadata.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      # Sign the resulting Docker image digest except on PRs.
      # This will only write to the public Rekor transparency log when the Docker
      # repository is public to avoid leaking data.  If you would like to publish
      # transparency data even for private images, pass --force to cosign below.
      # https://github.com/sigstore/cosign
      - name: Sign the published Docker image
        if: ${{ github.event_name != 'pull_request' }}
        env:
          # https://docs.github.com/en/actions/security-guides/security-hardening-for-github-actions#using-an-intermediate-environment-variable
          TAGS: ${{ steps.tag.outputs.SOURCE_TAG }}
          DIGEST: ${{ steps.build-and-push.outputs.digest }}
        # This step uses the identity token to provision an ephemeral certificate
        # against the sigstore community Fulcio instance.
        run: echo "${TAGS}" | xargs -I {} cosign sign --yes {}@${DIGEST}
